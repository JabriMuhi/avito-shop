// Code generated by MockGen. DO NOT EDIT.
// Source: ./transaction_service.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MocktransactionStorage is a mock of transactionStorage interface.
type MocktransactionStorage struct {
	ctrl     *gomock.Controller
	recorder *MocktransactionStorageMockRecorder
}

// MocktransactionStorageMockRecorder is the mock recorder for MocktransactionStorage.
type MocktransactionStorageMockRecorder struct {
	mock *MocktransactionStorage
}

// NewMocktransactionStorage creates a new mock instance.
func NewMocktransactionStorage(ctrl *gomock.Controller) *MocktransactionStorage {
	mock := &MocktransactionStorage{ctrl: ctrl}
	mock.recorder = &MocktransactionStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MocktransactionStorage) EXPECT() *MocktransactionStorageMockRecorder {
	return m.recorder
}

// GetCoinTransactionsByUserID mocks base method.
func (m *MocktransactionStorage) GetCoinTransactionsByUserID(ctx context.Context, userID int64) (map[string]int64, map[string]int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCoinTransactionsByUserID", ctx, userID)
	ret0, _ := ret[0].(map[string]int64)
	ret1, _ := ret[1].(map[string]int64)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetCoinTransactionsByUserID indicates an expected call of GetCoinTransactionsByUserID.
func (mr *MocktransactionStorageMockRecorder) GetCoinTransactionsByUserID(ctx, userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCoinTransactionsByUserID", reflect.TypeOf((*MocktransactionStorage)(nil).GetCoinTransactionsByUserID), ctx, userID)
}

// TransferCoins mocks base method.
func (m *MocktransactionStorage) TransferCoins(ctx context.Context, senderID, receiverID, amount int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TransferCoins", ctx, senderID, receiverID, amount)
	ret0, _ := ret[0].(error)
	return ret0
}

// TransferCoins indicates an expected call of TransferCoins.
func (mr *MocktransactionStorageMockRecorder) TransferCoins(ctx, senderID, receiverID, amount interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TransferCoins", reflect.TypeOf((*MocktransactionStorage)(nil).TransferCoins), ctx, senderID, receiverID, amount)
}
