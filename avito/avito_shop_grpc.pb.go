// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v5.29.3
// source: api/avito_shop.proto

package avito

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	AvitoShop_GetInfo_FullMethodName      = "/avito.AvitoShop/GetInfo"
	AvitoShop_SendCoin_FullMethodName     = "/avito.AvitoShop/SendCoin"
	AvitoShop_BuyItem_FullMethodName      = "/avito.AvitoShop/BuyItem"
	AvitoShop_Authenticate_FullMethodName = "/avito.AvitoShop/Authenticate"
)

// AvitoShopClient is the client API for AvitoShop service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type AvitoShopClient interface {
	GetInfo(ctx context.Context, in *InfoRequest, opts ...grpc.CallOption) (*InfoResponse, error)
	SendCoin(ctx context.Context, in *SendCoinRequest, opts ...grpc.CallOption) (*SendCoinResponse, error)
	BuyItem(ctx context.Context, in *BuyItemRequest, opts ...grpc.CallOption) (*BuyItemResponse, error)
	Authenticate(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthResponse, error)
}

type avitoShopClient struct {
	cc grpc.ClientConnInterface
}

func NewAvitoShopClient(cc grpc.ClientConnInterface) AvitoShopClient {
	return &avitoShopClient{cc}
}

func (c *avitoShopClient) GetInfo(ctx context.Context, in *InfoRequest, opts ...grpc.CallOption) (*InfoResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(InfoResponse)
	err := c.cc.Invoke(ctx, AvitoShop_GetInfo_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *avitoShopClient) SendCoin(ctx context.Context, in *SendCoinRequest, opts ...grpc.CallOption) (*SendCoinResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(SendCoinResponse)
	err := c.cc.Invoke(ctx, AvitoShop_SendCoin_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *avitoShopClient) BuyItem(ctx context.Context, in *BuyItemRequest, opts ...grpc.CallOption) (*BuyItemResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(BuyItemResponse)
	err := c.cc.Invoke(ctx, AvitoShop_BuyItem_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *avitoShopClient) Authenticate(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(AuthResponse)
	err := c.cc.Invoke(ctx, AvitoShop_Authenticate_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AvitoShopServer is the server API for AvitoShop service.
// All implementations must embed UnimplementedAvitoShopServer
// for forward compatibility.
type AvitoShopServer interface {
	GetInfo(context.Context, *InfoRequest) (*InfoResponse, error)
	SendCoin(context.Context, *SendCoinRequest) (*SendCoinResponse, error)
	BuyItem(context.Context, *BuyItemRequest) (*BuyItemResponse, error)
	Authenticate(context.Context, *AuthRequest) (*AuthResponse, error)
	mustEmbedUnimplementedAvitoShopServer()
}

// UnimplementedAvitoShopServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedAvitoShopServer struct{}

func (UnimplementedAvitoShopServer) GetInfo(context.Context, *InfoRequest) (*InfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInfo not implemented")
}
func (UnimplementedAvitoShopServer) SendCoin(context.Context, *SendCoinRequest) (*SendCoinResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendCoin not implemented")
}
func (UnimplementedAvitoShopServer) BuyItem(context.Context, *BuyItemRequest) (*BuyItemResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BuyItem not implemented")
}
func (UnimplementedAvitoShopServer) Authenticate(context.Context, *AuthRequest) (*AuthResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Authenticate not implemented")
}
func (UnimplementedAvitoShopServer) mustEmbedUnimplementedAvitoShopServer() {}
func (UnimplementedAvitoShopServer) testEmbeddedByValue()                   {}

// UnsafeAvitoShopServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to AvitoShopServer will
// result in compilation errors.
type UnsafeAvitoShopServer interface {
	mustEmbedUnimplementedAvitoShopServer()
}

func RegisterAvitoShopServer(s grpc.ServiceRegistrar, srv AvitoShopServer) {
	// If the following call pancis, it indicates UnimplementedAvitoShopServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&AvitoShop_ServiceDesc, srv)
}

func _AvitoShop_GetInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AvitoShopServer).GetInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AvitoShop_GetInfo_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AvitoShopServer).GetInfo(ctx, req.(*InfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AvitoShop_SendCoin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendCoinRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AvitoShopServer).SendCoin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AvitoShop_SendCoin_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AvitoShopServer).SendCoin(ctx, req.(*SendCoinRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AvitoShop_BuyItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BuyItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AvitoShopServer).BuyItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AvitoShop_BuyItem_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AvitoShopServer).BuyItem(ctx, req.(*BuyItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AvitoShop_Authenticate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AvitoShopServer).Authenticate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AvitoShop_Authenticate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AvitoShopServer).Authenticate(ctx, req.(*AuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// AvitoShop_ServiceDesc is the grpc.ServiceDesc for AvitoShop service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var AvitoShop_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "avito.AvitoShop",
	HandlerType: (*AvitoShopServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetInfo",
			Handler:    _AvitoShop_GetInfo_Handler,
		},
		{
			MethodName: "SendCoin",
			Handler:    _AvitoShop_SendCoin_Handler,
		},
		{
			MethodName: "BuyItem",
			Handler:    _AvitoShop_BuyItem_Handler,
		},
		{
			MethodName: "Authenticate",
			Handler:    _AvitoShop_Authenticate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/avito_shop.proto",
}
